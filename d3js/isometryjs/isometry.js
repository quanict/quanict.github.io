!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((t=t||self)._randallmorey_isometryjs={})}(this,function(t){"use strict";function n(t){return t*(Math.PI/180)}function e(t,n){return t.reduce((t,e,r)=>e*n[r]+t,0)}function r(t){return t[0].map((n,e)=>t.map(t=>t[e]))}function o(t,n){const o=r(n);return t.map(t=>o.map(n=>e(t,n)))}function s(t,n,e=0){return[t-e,n-e,-e]}function a(t){return(n,e,r)=>{const s=o(t,[[n],[e],[1]]);return[s[0][0],s[1][0],r]}}function u(t){const e=n(t),r=a(o([[Math.cos(e),-Math.sin(e),0],[Math.sin(e),Math.cos(e),0],[0,0,1]],o([[1,Math.tan(-e),0],[0,1,0],[0,0,1]],[[1,0,0],[0,Math.cos(-e),0],[0,0,1]])));return(t,n,e)=>r(...s(t,n,e))}function c(t){const e=n(t),r=a([[Math.tan(e),1,0],[-Math.tan(e),1,0],[0,0,1]]);return(t,n,e)=>s(...r(t,n,e))}const i=u(30),f=c(30);t.dotProduct=e,t.makeInverseIsometricTransform=c,t.makeIsometricTransform=u,t.matrixMultiply=o,t.standardInverseIsometricTransform=f,t.standardIsometricTransform=i,t.toDegrees=function(t){return t/(Math.PI/180)},t.toRadians=n,t.transpose=r,Object.defineProperty(t,"__esModule",{value:!0})});